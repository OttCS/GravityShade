/*
    GravityShade for the IRIS Shaders mod.
    Made by Gravity10, Code base by Sildur.
*/

const float emissionStrength = 1.2;             //Emmisive ore and stem strength [0.0 0.2 0.4 0.6 0.8 1.0 1.2 1.4 1.6 1.8 2.0]

const float emissive_R = 2.2;                      //[0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
const float emissive_G = 1.4;                      //[0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]
const float emissive_B = 1.0;                      //[0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2.0 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3.0]

const float ambientLevel = 0.08;

const vec3 waterCol = vec3(0.05, 0.15, 0.20);

#define Fog                                 //Toggle default fog.

//#define debugMode                           // Debugging mode for development
#ifdef debugMode
#define showFogOcclusion
#endif

#ifdef composite0
    //#define Reflections							//Toggle reflections, also adjust in gbuffers_textured.fsh
    #define Refractions						//Toggle refractions / distortion caused by waves.
    #define skyReflection						//Reflect and blend the default skycolor. Makes water waves more visible. WIP

    #define Godrays							//Toggle godrays
    #define grays_intensity 1.0				//Adjust godrays intensity [0.35 0.5 0.65 0.70 0.85 1.0]

#endif

#ifdef gbuffers_clouds
    // Nothing cloud-specific
#endif

#ifdef gbuffers_textured

    #define Reflections                         //Toggle reflections, also adjust in composite.fsh
        #define WaterReflection
        #define TransparentReflections          //see block.properties, transparent blocks are assigned to ice (79)

    #define Shadows                             //Also adjust in vertex, SHADOW_MAP_BIAS is also in vertex
    #ifdef Shadows
    #define Colored_Shadows
    #define slight 0.55                         //[0.50 0.55 0.60 0.65 0.70 0.75 0.80]
    #define SHADOW_MAP_BIAS 0.80
    const int 	shadowMapResolution = 1024;		//Shadows resolution. [1024 2048 3072 4096 8192]
    const float shadowDistance = 64.0;			//Draw distance of shadows.[60.0 90.0 120.0 150.0 180.0 210.0]
    const float shadowDistanceRenderMul = 1.0;
    const bool 	shadowHardwareFiltering0 = true;
    const bool 	shadowHardwareFiltering1 = true;
    #endif
    const float	sunPathRotation	= -40.0;		//[-10.0 -20.0 -30.0 -40.0f -50.0 -60.0 -70.0 -80.0 -0.15f -0.0 10.0 20.0 30.0 40.0 50.0 60.0 70.0 80.0]

    #define nMap 0                              //[0 1 2]0=Off 1=Bumpmapping, 2=Parallax, also adjust in vertex
    #define POM_RES 32                          //Texture / Resourcepack resolution. [32 64 128 256 512 1024 2048]
    #define POM_DIST 16.0                       //[8.0 16.0 24.0 32.0 40.0 48.0 56.0 64.0]
    #define POM_DEPTH 0.30                      //[0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 1.0]
    //#define draw_bmap                         //Draw bmap normals

    #define animationSpeed 0.6                  //[0.25 0.5 0.75 1.0 1.25 1.5 1.75 2.0]
    #define Waving_Grass
    #define Waving_Entities                     //Includes: Saplings, small flowers, wheat, carrots, potatoes and beetroot.
    #define Waving_Tallgrass
    #define Waving_Lanterns
    #define waves_amplitude 0.65                //[0.55 0.65 0.75 0.85 0.95 1.05 1.15 1.25 1.35 1.45 1.55 1.65 1.75 1.85 1.95 2.05]

#endif

#ifdef shadowprogram
    #define Shadows
    #define SHADOW_MAP_BIAS 0.80
    #define grass_shadows
#endif